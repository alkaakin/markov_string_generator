/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package markovstringgenerator;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.File;
import java.io.FileNotFoundException;
import javafx.stage.Stage;

public class App {
    
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws FileNotFoundException {
        
        Trie trie = new Trie();
        System.out.print(trie.searchTrie("ADD"));
        trie.insertTrie("ADD");
        System.out.print(trie.searchTrie("ADD"));
        File nimilista = new File("/home/alkaakin/markov_string_generator/markovstringgenerator/nimilista.txt");
        FileInputStream stream = new FileInputStream(nimilista);
        BufferedReader reader = new BufferedReader(new InputStreamReader(stream));
        trie.fileToTrie(nimilista);
        System.out.print(trie.searchTrie("Arwen"));
        System.out.print(trie.searchTrie("Alastair"));
        System.out.print(trie.searchTrie("Aleksi"));
        trie.insertTrie("Aleksii");
        System.out.println(trie.searchTrie("Aleksii"));
        System.out.println("\n");
        System.out.println("testi");
        System.out.println("\n");
        System.out.println(trie.searchTrie("Inka"));
        trie.insertTrie("Inka");
        System.out.println("\n");
        System.out.println(trie.searchTrie("Inka"));
        System.out.println(trie.returnRoot().getCharacters());
        System.out.println(trie.returnRoot().getChild());
        System.out.println(trie);
        //System.out.println(trie.root.getAllChildren("a"));
        //testVisualization testi = new testVisualization();
        //Stage stage = new Stage();
        //testi.start(stage);
        System.out.println(trie.searchTrie("Inka"));
        //trie.root.getAllChildren();
        trie.returnRoot().setChild('x', new TrieNode());
        trie.returnRoot().setChild('b', new TrieNode());
        trie.searchTrie("Alastair");
        trie.printWords('o');
        trie.printWords("al");
        System.out.println("\n");
        trie.printWords("oli");
        trie.insertTrie("oliver");
        trie.printWords("oli");
        System.out.print(trie.doesPrefixExist("al"));
        System.out.print(trie.doesPrefixExist("ba"));
        trie.insertTrie("oliver");
        trie.printWords('o');
        trie.insertTrie("olivia");
        System.out.println("\n");
        trie.printWords('o');
        System.out.println(trie);
        trie.printWords('w');
        trie.printWords('i');
    }
}
